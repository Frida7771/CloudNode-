{"level":"info","message":"Server started on port 3000","service":"healthweb-clone","timestamp":"2025-09-14T18:53:27.744Z"}
{"level":"error","message":"Unable to connect to database: role \"postgresql\" does not exist","name":"SequelizeConnectionError","original":{"code":"28000","file":"miscinit.c","length":102,"line":"755","name":"error","routine":"InitializeSessionUserId","severity":"FATAL"},"parent":{"code":"28000","file":"miscinit.c","length":102,"line":"755","name":"error","routine":"InitializeSessionUserId","severity":"FATAL"},"service":"healthweb-clone","stack":"SequelizeConnectionError: role \"postgresql\" does not exist\n    at Client._connectionCallback (/Users/frida/Documents/Projects/CloudNode-/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/Users/frida/Documents/Projects/CloudNode-/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/Users/frida/Documents/Projects/CloudNode-/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:524:28)\n    at Connection.emit (node:domain:489:12)\n    at /Users/frida/Documents/Projects/CloudNode-/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/Users/frida/Documents/Projects/CloudNode-/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/Users/frida/Documents/Projects/CloudNode-/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:524:28)\n    at Socket.emit (node:domain:489:12)","timestamp":"2025-09-14T18:53:27.760Z"}
{"level":"error","message":"Database sync failed: role \"postgresql\" does not exist","name":"SequelizeConnectionError","original":{"code":"28000","file":"miscinit.c","length":102,"line":"755","name":"error","routine":"InitializeSessionUserId","severity":"FATAL"},"parent":{"code":"28000","file":"miscinit.c","length":102,"line":"755","name":"error","routine":"InitializeSessionUserId","severity":"FATAL"},"service":"healthweb-clone","stack":"SequelizeConnectionError: role \"postgresql\" does not exist\n    at Client._connectionCallback (/Users/frida/Documents/Projects/CloudNode-/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/Users/frida/Documents/Projects/CloudNode-/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/Users/frida/Documents/Projects/CloudNode-/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:524:28)\n    at Connection.emit (node:domain:489:12)\n    at /Users/frida/Documents/Projects/CloudNode-/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/Users/frida/Documents/Projects/CloudNode-/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/Users/frida/Documents/Projects/CloudNode-/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:524:28)\n    at Socket.emit (node:domain:489:12)","timestamp":"2025-09-14T18:53:27.762Z"}
{"level":"info","message":"Server started on port 3000","service":"healthweb-clone","timestamp":"2025-09-14T18:55:59.030Z"}
{"level":"info","message":"Executing (default): SELECT 1+1 AS result","service":"healthweb-clone","timestamp":"2025-09-14T18:55:59.078Z"}
{"level":"info","message":"Executing (default): SELECT 1+1 AS result","service":"healthweb-clone","timestamp":"2025-09-14T18:55:59.079Z"}
{"level":"info","message":"Database synced successfully","service":"healthweb-clone","timestamp":"2025-09-14T18:55:59.079Z"}
{"level":"info","message":"Database connection established successfully","service":"healthweb-clone","timestamp":"2025-09-14T18:55:59.079Z"}
{"level":"info","message":"Health check endpoint accessed","service":"healthweb-clone","timestamp":"2025-09-14T18:56:35.158Z"}
{"level":"info","message":"Server started on port 3000","service":"healthweb-clone","timestamp":"2025-09-14T19:06:11.735Z"}
{"level":"error","message":"Unable to connect to database: database \"frida\" does not exist","name":"SequelizeConnectionError","original":{"code":"3D000","file":"postinit.c","length":90,"line":"890","name":"error","routine":"InitPostgres","severity":"FATAL"},"parent":{"code":"3D000","file":"postinit.c","length":90,"line":"890","name":"error","routine":"InitPostgres","severity":"FATAL"},"service":"healthweb-clone","stack":"SequelizeConnectionError: database \"frida\" does not exist\n    at Client._connectionCallback (/Users/frida/Documents/Projects/CloudNode-/healthweb/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/Users/frida/Documents/Projects/CloudNode-/healthweb/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/Users/frida/Documents/Projects/CloudNode-/healthweb/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:524:28)\n    at Connection.emit (node:domain:489:12)\n    at /Users/frida/Documents/Projects/CloudNode-/healthweb/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/Users/frida/Documents/Projects/CloudNode-/healthweb/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/Users/frida/Documents/Projects/CloudNode-/healthweb/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:524:28)\n    at Socket.emit (node:domain:489:12)","timestamp":"2025-09-14T19:06:11.747Z"}
{"level":"error","message":"Database sync failed: database \"frida\" does not exist","name":"SequelizeConnectionError","original":{"code":"3D000","file":"postinit.c","length":90,"line":"890","name":"error","routine":"InitPostgres","severity":"FATAL"},"parent":{"code":"3D000","file":"postinit.c","length":90,"line":"890","name":"error","routine":"InitPostgres","severity":"FATAL"},"service":"healthweb-clone","stack":"SequelizeConnectionError: database \"frida\" does not exist\n    at Client._connectionCallback (/Users/frida/Documents/Projects/CloudNode-/healthweb/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/Users/frida/Documents/Projects/CloudNode-/healthweb/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/Users/frida/Documents/Projects/CloudNode-/healthweb/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:524:28)\n    at Connection.emit (node:domain:489:12)\n    at /Users/frida/Documents/Projects/CloudNode-/healthweb/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/Users/frida/Documents/Projects/CloudNode-/healthweb/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/Users/frida/Documents/Projects/CloudNode-/healthweb/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:524:28)\n    at Socket.emit (node:domain:489:12)","timestamp":"2025-09-14T19:06:11.750Z"}
{"level":"info","message":"Server started on port 3000","service":"healthweb-clone","timestamp":"2025-09-14T19:08:47.401Z"}
{"level":"info","message":"Executing (default): SELECT 1+1 AS result","service":"healthweb-clone","timestamp":"2025-09-14T19:08:47.457Z"}
{"level":"info","message":"Database connection established successfully","service":"healthweb-clone","timestamp":"2025-09-14T19:08:47.458Z"}
{"level":"info","message":"Executing (default): SELECT 1+1 AS result","service":"healthweb-clone","timestamp":"2025-09-14T19:08:47.458Z"}
{"level":"info","message":"Database synced successfully","service":"healthweb-clone","timestamp":"2025-09-14T19:08:47.458Z"}
{"level":"info","message":"Health check endpoint accessed","service":"healthweb-clone","timestamp":"2025-09-14T19:10:01.436Z"}
{"level":"info","message":"Health check endpoint accessed","service":"healthweb-clone","timestamp":"2025-09-14T19:10:02.130Z"}
{"level":"info","message":"Health check endpoint accessed","service":"healthweb-clone","timestamp":"2025-09-14T19:10:02.750Z"}
{"level":"info","message":"Health check endpoint accessed","service":"healthweb-clone","timestamp":"2025-09-14T19:10:19.096Z"}
{"level":"info","message":"Health check endpoint accessed","service":"healthweb-clone","timestamp":"2025-09-14T19:10:20.220Z"}
{"level":"info","message":"Health check endpoint accessed","service":"healthweb-clone","timestamp":"2025-09-14T19:10:49.928Z"}
{"level":"info","message":"Server started on port 3000","service":"healthweb-clone","timestamp":"2025-09-15T00:47:50.684Z"}
{"level":"info","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'email_logs'","service":"healthweb-clone","timestamp":"2025-09-15T00:47:50.727Z"}
{"level":"info","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"email_logs\" (\"id\"  SERIAL , \"email\" VARCHAR(255) NOT NULL, \"token\" VARCHAR(255) NOT NULL UNIQUE, \"email_sent_time\" TIMESTAMP WITH TIME ZONE NOT NULL, \"email_verified_time\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","service":"healthweb-clone","timestamp":"2025-09-15T00:47:50.739Z"}
{"level":"info","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'email_logs' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","service":"healthweb-clone","timestamp":"2025-09-15T00:47:50.761Z"}
{"level":"info","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users'","service":"healthweb-clone","timestamp":"2025-09-15T00:47:50.766Z"}
{"level":"info","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"users\" (\"id\"  SERIAL , \"first_name\" VARCHAR(255) NOT NULL, \"last_name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"password\" VARCHAR(255) NOT NULL, \"verified\" BOOLEAN DEFAULT false, \"account_created\" TIMESTAMP WITH TIME ZONE NOT NULL, \"account_updated\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","service":"healthweb-clone","timestamp":"2025-09-15T00:47:50.767Z"}
{"level":"info","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","service":"healthweb-clone","timestamp":"2025-09-15T00:47:50.770Z"}
{"level":"info","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'images'","service":"healthweb-clone","timestamp":"2025-09-15T00:47:50.772Z"}
{"level":"info","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"images\" (\"id\"  SERIAL , \"file_name\" VARCHAR(255) NOT NULL, \"url\" VARCHAR(255) NOT NULL, \"upload_date\" TIMESTAMP WITH TIME ZONE NOT NULL, \"user_id\" INTEGER NOT NULL REFERENCES \"users\" (\"id\"), PRIMARY KEY (\"id\"));","service":"healthweb-clone","timestamp":"2025-09-15T00:47:50.772Z"}
{"level":"info","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'images' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","service":"healthweb-clone","timestamp":"2025-09-15T00:47:50.782Z"}
{"level":"info","message":"Database synced successfully","service":"healthweb-clone","timestamp":"2025-09-15T00:47:50.784Z"}
{"level":"info","message":"Server started on port 3000","service":"healthweb-clone","timestamp":"2025-09-15T00:47:51.540Z"}
{"level":"info","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'email_logs'","service":"healthweb-clone","timestamp":"2025-09-15T00:47:51.565Z"}
{"level":"info","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'email_logs' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","service":"healthweb-clone","timestamp":"2025-09-15T00:47:51.569Z"}
{"level":"info","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users'","service":"healthweb-clone","timestamp":"2025-09-15T00:47:51.572Z"}
{"level":"info","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","service":"healthweb-clone","timestamp":"2025-09-15T00:47:51.573Z"}
{"level":"info","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'images'","service":"healthweb-clone","timestamp":"2025-09-15T00:47:51.575Z"}
{"level":"info","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'images' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","service":"healthweb-clone","timestamp":"2025-09-15T00:47:51.576Z"}
{"level":"info","message":"Database synced successfully","service":"healthweb-clone","timestamp":"2025-09-15T00:47:51.578Z"}
{"level":"info","message":"Health check endpoint accessed","service":"healthweb-clone","timestamp":"2025-09-15T00:48:06.536Z"}
{"level":"info","message":"Server started on port 3000","service":"healthweb-clone","timestamp":"2025-09-15T00:48:12.443Z"}
{"level":"info","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'email_logs'","service":"healthweb-clone","timestamp":"2025-09-15T00:48:12.469Z"}
{"level":"info","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'email_logs' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","service":"healthweb-clone","timestamp":"2025-09-15T00:48:12.473Z"}
{"level":"info","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users'","service":"healthweb-clone","timestamp":"2025-09-15T00:48:12.477Z"}
{"level":"info","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","service":"healthweb-clone","timestamp":"2025-09-15T00:48:12.478Z"}
{"level":"info","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'images'","service":"healthweb-clone","timestamp":"2025-09-15T00:48:12.480Z"}
{"level":"info","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'images' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","service":"healthweb-clone","timestamp":"2025-09-15T00:48:12.480Z"}
{"level":"info","message":"Database synced successfully","service":"healthweb-clone","timestamp":"2025-09-15T00:48:12.481Z"}
